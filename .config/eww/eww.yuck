(include "./modules/notifications/notifications.yuck")
(include "./modules/volume/volume.yuck")
(include "./modules/menu/menu.yuck")

(defvar wm_state '[[{"clients":[{"minimized":false,"oncurrenttag":false,"class":"firefox","focused":false,"name":"Gtk – 3.0: CSS Properties — Mozilla Firefox"}],"visible":false,"index":1,"name":"o"},{"clients":[{"minimized":false,"oncurrenttag":false,"class":"discord","focused":false,"name":"help - Discord"}],"visible":false,"index":2,"name":"o"},{"clients":[{"minimized":false,"oncurrenttag":true,"class":"org.wezfurlong.wezterm","focused":false,"name":"~"},{"minimized":false,"oncurrenttag":true,"class":"org.wezfurlong.wezterm","focused":false,"name":"eww"},{"minimized":false,"oncurrenttag":true,"class":"org.wezfurlong.wezterm","focused":true,"name":"ranger"},{"minimized":false,"oncurrenttag":true,"class":"org.wezfurlong.wezterm","focused":false,"name":"cawesome"}],"visible":true,"index":3,"name":"o"},{"clients":[{"minimized":false,"oncurrenttag":false,"class":"notion-app-enhanced","focused":false,"name":"Watch List"}],"visible":false,"index":4,"name":"o"},{"clients":[{"minimized":false,"oncurrenttag":false,"class":"Spotify","focused":false,"name":"Spotify"}],"visible":false,"index":5,"name":"o"}]]

')

(defwidget workspaces [screen]
  ; (eventbox
    (box :orientation "v"
         :space-evenly "false"
         :class "ws-widget"
         :spacing 3
         :height 300

     (for ws in {wm_state[screen]}
       (eventbox :cursor "pointer" :onclick "wmctrl -s ${ws.index - 1}"
                 ; :onrightclick "eww update ws_controls_visible='${!ws_controls_visible}'"
                 :class "ws-cell ${ws.visible ? "ws-visible" : ""}"
         (box :orientation "v"
              :space-evenly "false"
              :class "ws-cell-inner"
              :spacing 4
           (for c in {ws.clients}
             (client :c c)))))))
          
(defvar client_controls_visible "false")
(defvar ws_controls_visible "false")

(defwidget client [c]
  (eventbox :cursor "pointer"
    (box :orientation "v"
         :space-evenly "false"
      (button :onclick {c.focused ? "xdotool getactivewindow windowminimize" : "wmctrl -ia ${c.id}"}
              :onrightclick "eww update client_controls_visible='${!client_controls_visible}'"
              :class "client 
                  ${c.oncurrenttag ? "client-onspace": ""} 
                  ${c.focused ? "client-focused": ""} 
                  ${c.maximized ? "client-maximized": ""} 
                  ${c.floating ? "client-floating": ""} 
                  ${c.minimized ? "client-minimized": ""}"
              :tooltip {c.name})
              ; :style "background-image: url('./${c.class}.svg')"
        ; (image :path "./${c.class}.svg" :image-width 18 :image-height 18 :class "spotify")
      
      
      (client_controls :visible {client_controls_visible})
      (ws_controls :visible {ws_controls_visible}))))
      
    
  


(defwidget client_controls [visible]
  (revealer :reveal {client_controls_visible}
            :transition "slidedown"
            :duration "200ms"
    (box :class "client-controls")))
  

              
(defwidget ws_controls [visible]
  (revealer :reveal {ws_controls_visible}
            :transition "slidedown"
            :duration "200ms"
    (box :class "ws-controls")))
  


(defwidget appmenu []
  (eventbox :cursor "pointer"
   (button :class "appmenu-button"
           :height 28
           :onclick "jgmenu_run")))
    


(defwidget clock []
  (eventbox :tooltip date
    (box :orientation "v"
         :space-evenly false
         :class "clock"
     (box :class "clock-text hour" hour)
     (box :class "clock-separator" :height 1 :width 1)
     (box :class "clock-text min" min))))
    
  


(deflisten network "~/n.sh")
(defwidget netmonitor []
  (eventbox :onhover "eww open network-monitor-tooltip"
            :onhoverlost "eww close network-monitor-tooltip"
   ; (transform :scale-x "90%"
    (box :orientation "h"
         :space-evenly false
         :halign "center"
         :class "netmonitor"
      (box :class "network-arrow ${EWW_NET["wlp35s0"]["NET_UP"] < 100000     ? "net-gray" :
                                   EWW_NET["wlp35s0"]["NET_UP"] < 1000000    ? "net-green" :
                                   EWW_NET["wlp35s0"]["NET_UP"] < 10000000   ? "net-yellow" :
                                   "net-red" }" "↑")

      (box :class "network-arrow ${EWW_NET["wlp35s0"]["NET_DOWN"] < 100000   ? "net-gray" :
                                   EWW_NET["wlp35s0"]["NET_DOWN"] < 1000000  ? "net-green" :
                                   EWW_NET["wlp35s0"]["NET_DOWN"] < 10000000 ? "net-yellow" :
                                   "net-red" }" "↓"))))

      
    
  


(defpoll hour :interval "1s" "date +%H")
(defpoll min  :interval "1s" "date +%M")
(defpoll date :interval "3600s" "date")

(defwindow bar
  :monitor 0
  :geometry (geometry :x "48px" :y "0px" :width "32px" :height "1080px" :anchor "left center")
  ; :stacking "fg"
  :wm-ignore false
  :reserve (struts :distance "40px" :side "left")
  :windowtype "dock"

  (box :class "bar-window" 
    :orientation "v"
    :space-evenly false
    (box :class "bar-top"
      :orientation "v"
      :valign "fill"
      :space-evenly false
      ; (appmenu)
      (workspaces :screen 1))
    
    (box :class "bar-mid")
    (box :class "bar-bot"
         :valign "end"
         :vexpand "true"
         :orientation "v"
         :space-evenly false
      (netmonitor)
      (clock))))
    
  


(defwindow bar2
  :monitor 1
  :geometry (geometry :x "8px" :y "0px" :width "32px" :height "1050px" :anchor "left center")
  ; :stacking "fg"
  :wm-ignore false
  :reserve (struts :distance "40px" :side "left")
  :windowtype "dock"

  (box :class "bar-window" 
    :orientation "v"
    :space-evenly true
    (box :class "bar-top"
      :orientation "v"
      :valign "fill"
      :space-evenly false
      ; (appmenu)
      (workspaces :screen 1))
    (box :class "bar-mid")
    (box :class "bar-bot"
         :valign "end"
         :orientation "v"
         :space-evenly false
      (netmonitor)
      (clock))))
    
  


(defwindow network-monitor-tooltip
  :monitor 0
  :geometry (geometry :x "46px" :y "-35px" :width "110px" :height "50px" :anchor "left bottom")
  :anchor "left center"
  :wm-ignore true
  :windowtype "normal"

  (box :class "net-tooltip" :orientation "v" :space-evenly true

    (box :space-evenly false
      (box :halign "start" "↑")
      (box :space-evenly false :orientation "h" :halign "end" :hexpand true
        { EWW_NET["wlp35s0"]["NET_UP"] > 1000000 ?
         round(EWW_NET["wlp35s0"]["NET_UP"] / 1000000, 1)
         : round(EWW_NET["wlp35s0"]["NET_UP"] / 1000, 1)}
        
        { EWW_NET["wlp35s0"]["NET_UP"] > 1000000 ?
            " Mo/s"
          : " ko/s"}))


    (box :space-evenly false 
      (box :halign "start" "↓")
      (box :space-evenly false :orientation "h" :halign "end" :hexpand true
        { EWW_NET["wlp35s0"]["NET_DOWN"] > 1000000 ?
         round(EWW_NET["wlp35s0"]["NET_DOWN"] / 1000000, 1)
         : round(EWW_NET["wlp35s0"]["NET_DOWN"] / 1000, 1)}
        
        { EWW_NET["wlp35s0"]["NET_DOWN"] > 1000000 ?
            " Mo/s"
          : " ko/s"}))))
        
      
    
